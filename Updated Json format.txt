{
    "subDivisions":number,
    "tempo":number,
    "instruments":[
                      {"chan":number, "inst":number},
                      {"chan":number, "inst":number}
                  ],
    "notes":[
                {"id":number, "pos":number, "chan":number, "note":number, "vol":number, "noteOn":boolean},
                {"id":number, "pos":number, "chan":number, "note":number, "vol":number, "noteOn":boolean}
            ]
}



Explanation

subDivisions is the amount a quarter note (or if you're English, a crotchet) has been split up. For example, a 
value of 4 would mean there are 4 possible positions a note could start or stop in the length represented by
a crotchet. In reality it means if a higher value is used, the user would be able to choose more precisely the
start and stop of a note in the editor. 
1 is the lowest possible value. It would mean notes could not be smaller than a crotchet and must start and end
where the crotchets start and end if placed back to back.



tempo is beats per minute. A normal value is around 120 bpm. It would seem that in MIDI at least, there are 2
crotchets in a beat. This seems confusing and might actually be wrong but in the end it won't matter because 
it only defines how fast the jingle should be played.



instruments in an array of definitions. There can be up to 16 definitions for the 16 channels available in a track.
channel 10 is reserved for percussion so you can have a max of 15 instruments.
The channel number is from 0 to 15. The instrument number is from 0 to 127.



notes is an array of note definitions. There are 2 kinds of note events: note on and note off.

pos is the position in the jingle this event is. For example, if each crotchet is subDivided 4 times,
then position 0 is the first possible event in the first crotchet. Position 4 is the first possible event in the second crotchet,
and so on. 
-------------------------------------
|  |  |  |  |  |  |  |  |  |  |  |  |
0--1--2--3--4--5--6--7--8--9--10-11-12
The above diagram can represent 3 crotchets where the subDivision is set to 4. To play a crotchet starting at position 0,
the note on event should have its pos set to 0 and the note off event should have its pos set to 4 so that the cell divisors
at 0 and 4 enclose the 4 cells of the crotchet.


chan refers to which channel should play the note. This basically means which instrument should play the note
because the channel maps to an instrument in the instruments declaration above

note is a number from 0 to 127 representing which note should be played. We are probably going to limit to 3 octaves,
so this range of numbers will be more restricted

volume is a number from 0 to 127. It represents how loud the note should be, eg how hard a note is pressed

noteOn is simply a boolean to distinguish between notes on and notes off.

id is needed to know which note the client is referring to when a note is edited. For example when a note is moved we need
to know which one. This is especially true when the multiple notes starting at the same time so it would not be possible
to distinguish between the notes based on their position.
Each note has 2 events, note On and note Off. Both of these note events will have the same id because they refer to the 
same note

It will probably be good to make sure that the array of note definitions stay ordered based on their pos fields.





This JSON format is likely to influence the content of the messages sent between client and server during editing.

When a new jingle is created or a current jingle is loaded, the server will need to send the entire JOSN string to the client
    In the case of a new jingle being created, this could be a JSON with subDivision and tempo set to their default values
    and the instruments and notes array empty
    
When a jingle is being edited, there will need to be messages for the following:
    edit tempo
    edit subDivision
    add/edit instrument
    add/edit note
There will also need to be messages for getting the MIDI file from the server for playback in the editor
    
When adding or editing an instrument, the message contents should contain the channel number and the instrument number

When adding or editing a note, the message should probably contain all the data in a note definition:
    "id":number, "pos":number, "chan":number, "note":number, "vol":number, "noteOn":boolean
    
    That should be sufficient data for the server to know which note is being edited, and where the note should go in the
    overall jingle. At the very least, "id" and "noteOn" are required to identify any single note event.